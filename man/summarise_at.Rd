% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multSimData_outputMethods.R,
%   R/multSim_calculations.R
\name{summarise_at}
\alias{summarise_at}
\alias{summarise_at.multSimData}
\alias{summarise_at.multSim}
\title{Summarise multSimData}
\usage{
summarise_at(.tbl, .vars, .funs, ...)

\method{summarise_at}{multSimData}(.tbl, .vars, .funs, ...)

\method{summarise_at}{multSim}(.tbl, .vars, .funs, ...)
}
\arguments{
\item{.tbl}{a data.frame returned by method \code{\link{getMultSimData}}}

\item{.vars}{a character vector of variable names to apply the functions for}

\item{.funs}{a list of function calls generated by \code{\link[dplyr]{funs}}, 
or a character vector of function names, or simply a function.}

\item{...}{Additional arguments for the function calls in .funs.}
}
\value{
a \code{tbl} with the applied function values
}
\description{
This method overrides the default \code{\link{summarise_at}} method from 
package \pkg{dplyr} to work with data generated by function 
\code{\link{getMultSimData}}. It basically groups the data before 
summarising, so that the functions are applied for every time value 
separately.
}
\examples{
data("simplePdmp")
md <- getMultSimData(multSim(simplePdmp, 1:20))
summarise_at(md, .vars = c("f", "d"), .funs = c("min", "max"))
summarise_at(md, .vars = "f", .funs = dplyr::funs(10 * quantile(., 0.75)))
}
\seealso{
\link[dplyr]{summarise_at} for the original method, 
\link{plotStats} to plot the calculated values
}
