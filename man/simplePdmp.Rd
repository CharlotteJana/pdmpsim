% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{data}
\name{simplePdmp}
\alias{simplePdmp}
\title{A simple PDMP}
\format{An object of class \code{\link{pdmpModel}}.}
\usage{
simplePdmp
}
\description{
This is a simple example for a piecewise deterministic markov process
defined as \code{\link{pdmpModel}}. It is included to the package for 
demonstration purposes and is used in some unit tests and function 
examples.
}
\section{Slots}{

\describe{
\item{\code{parms}}{There are no parameters for this model.}

\item{\code{init}}{There is one continous variable \code{f} with initial value 0
and one discrete variable \code{d} initial value 0.}

\item{\code{discStates}}{The discrete variable \code{d} has codomain \{-1, 0, 1\}.}

\item{\code{dynfunc}}{The continous variable \code{f} evolves as linear function
\eqn{f(t) = t} if \code{d = 1},
as \eqn{f(t) = -t} if \code{d = -1} and is constant zero if \code{d = 0}. 
Its dynamic can therefore be described as \eqn{\frac{df}{dt} = d}{df/dt = d}.}

\item{\code{jumpfunc}}{There are two jumptypes. The first jumps from \code{d} to 
\code{d - 1}, the second from \code{d} to \code{d + 1}. Both reset \code{f} 
to zero.}

\item{\code{ratefunc}}{A vector of length two determining the probability of a jump 
being of type 1 or 2. If \code{d = -1}, it has value \code{(0, 2)} forcing 
the jumptype to be of type 2. The same takes place for \code{d = 1}: 
\code{ratefunc} returnes \code{(2, 0)} and the jumptype is therefore always 
of type 1. In case \code{d = 0}, \code{ratefunc} returnes \code{(1, 1)} which
leads to a probability of \eqn{\frac{1}{2}}{Â½} to have a jumptype of type 
1 or 2.}

\item{\code{times}}{The simulations will start at time \code{t = 0} and end at 
\code{t = 10} with step length 0.01.}
}}

\examples{
## the code used to generate this model:
simplePdmp <- pdmpModel(
    descr = "A simple PDMP",
    init = c(f = 0, d = 0),
    discStates = list(d = c(-1, 0, 1)),
    times = c(from = 0, to = 10, by = 0.01),
    dynfunc = function(t, x, parms) c(x["d"], 0),
    ratefunc = function(t, x, parms) c(1+x["d"], 1-x["d"]),
    jumpfunc = function(t, x, parms, jtype){
         c(0, switch(jtype, x["d"]-1, x["d"]+1))
    })

## load it and plot a simulation:
data("simplePdmp")
plot(sim(simplePdmp))
}
\seealso{
\code{\link{toggleSwitch}} for a more sophisticated example of a 
\code{pdmpModel} and \code{\link{pdmpModel}}
for the formal description of the S4 class.
}
\keyword{datasets}
