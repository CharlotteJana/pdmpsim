% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{data}
\name{IBBall}
\alias{IBBall}
\title{Increased bouncing ball}
\format{An object of class \code{\link{pdmpBorder}}.}
\usage{
IBBall
}
\description{
This is a minimal fictitious example, of a PDMP jumping at borders 
\code{\link{pdmpBorder}}, where no stochastic jumps exist, so that it is easy 
to see the functionality of borders.
Here the minimum border 0 ist the ground where the velocity of the ball
rises and therefore the height of each hop increases up to a second 
fixed border (20), where the process stops.
}
\section{Slots}{

\describe{
\item{\code{init}}{There ist one continous variable, which describes the velocity of 
the ball and no discrete variable.}

\item{\code{discStates}}{there are no discstates.}

\item{\code{dynfunc}}{The dynamic of the continous variable depends on 
the velocity at the last jump (borderjump or stochastic jump).}

\item{\code{jumpfunc}}{}

\item{\code{ratefunc}}{}

\item{\code{parms}}{There are are a number of parameters that appear in the dynamics 
and  no change rates of the process.}

\item{\code{times}}{The simulations will start at time \code{t = 0} and end at the time, where the termination terminating value is reached.}

\item{\code{borroot}}{It has dimension one and replaces the ground (=minimum)}

\item{\code{terroot}}{Every value, which forces the process to terminate is stored in the vector terroot.
In this example it has dimension one and is the fixes value of 20 which forces the precess to terminate.}

\item{\code{borderfunc}}{The simulations will start at time \code{t = 0} and end at time where the termination terminating value is reached.}
}}

\examples{

IBBall <-pdmpBorder(
  descr = "increasing bouncing ball, just borderjumps",
  parms = list(a = -5, b = -1.1),
  init = c(height = 0, velocity = 10),
  discStates = list(),
  borroot = function(t, x, parms){return(c(x[1]))},
  terroot = function(t, x, parms){return(c(x[1] - 20))},
  times = seq(from = 0, to = 25, by = 0.01),
  dynfunc =  function(t, x, parms) {
    dheight <- with(as.list(c(x, parms)), c(velocity, a))
  return(c(dheight))
  },
  ratefunc = function(t, x, parms) {
    0
  },
  jumpfunc = function(t, x, parms) {return(with(as.list(c(x, parms)), c(dheight)))},
  borderfunc = function(t, x, parms){return(with(as.list(c(x, parms)), c(height = 0, velocity = b* velocity)))
})

# load it and plot a simulation:
data("IBBall")
plot(sim(IBBall))
}
\seealso{
\code{\link{OÃ–K}} for an easier example of a \code{pdmpBorder}
and \code{\link{pdmpBorder}}
for the formal description of the S4 class.
}
\keyword{datasets}
