% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.R
\docType{data}
\name{OÖK}
\alias{OÖK}
\title{Autecological PDMP}
\format{An object of class \code{\link{pdmpBorder}}.}
\usage{
OÖK
}
\description{
This is a more complicated example, of a PDMP jumping at borders 
\code{\link{pdmpBorder}}, where we consider stochastic jumps  
as well as fixes jumps at borders.
The model describes the energy of an individual, which can live in 
different areas an be in different modi, which lead to a differant 
dynamic and between which the individual switches
stochastically and fixed, in case of reaching a border.
The minimum border 0 means that the individual dies and therefor the 
process terminates.
The Maximum border forces a jump into another modus.
}
\section{Slots}{

\describe{
\item{\code{init}}{There is onecontinous variable \eqn{dz_1}{dz}
which describe the energy of the considered individuum and two discrete variables 
\eqn{dz_2}{dz} and \eqn{dz_3}{dz}, which describe the modus and area of the individuum.}

\item{\code{discStates}}{One discrete variable \eqn{dz_3}{dz} models the modus it has codomain \{1, 2, 3\} where 1 means 
that the individuum is in search modus, 2 means that the individuum is eating ans 3 means that it is in flight modus.
The other one \eqn{dz_2}{dz} models the area whith codomain \{1, 2, 3\}.}

\item{\code{dynfunc}}{The dynamic of the continous variable depends on 
the velocity at the last jump (borderjump or stochastic jump), and the new discrete state.}

\item{\code{jumpfunc}}{There are four jumptypes, the first two just change the modus, and the other ones just the area.}

\item{\code{ratefunc}}{A vector of length four determining the probability of a jump 
being of jumptype 1, 2, 3 or 4 (two possible modusjumps and two possible areajumps).
The rates of modus change are modelled constant but the rates of changing the area are dependig on the engery value.
Here, the rates areachanging are zero iff the modus is unequal to 1, which means that the model assumes, that the individuum
just changes the area iff it is in searching modus.}

\item{\code{parms}}{There are are a number of parameters that appear in the dynamics 
and rates of the process. First of all there are the parameters of decrease and increase of energy in the different states \eqn{β, a_11, a_21, a_31, a_22, a_12, a_32, a_23, a_13, a_33}.
Then we have area change rates, which are depending on the engergy and the recent area (=searching individuum) \eqn{s_12, s_21, s_31, s_13, s_23, s_32} 
and we have the modus change rates, differing in each area on the recent modus, because of different food resources, competitors and hunters 
\eqn{κ112, κ113, κ131, κ132, κ121, κ123, κ212, κ213, κ231, κ232, κ221, κ223, κ312, κ313, κ331, κ332, κ321, κ323}. 
The values of the parameters in this example are artificial and are not based on real data.}

\item{\code{times}}{The simulations will start at time \code{t = 0} and end at the terminatin borderjump.}

\item{\code{borroot}}{Every value, which forces the process to jump into a fixed state is stored in the vector borroot.
In this example it has dimension one and is the engery maximum of 2.}

\item{\code{terroot}}{Every value, which forces the process to terminate is stored in the vector terroot.
In this example it has dimension one and is the energy minimum of 0.}

\item{\code{borderfunc}}{The simulations will start at time \code{t = 0} and end at 
\code{t = 10} with step length 0.01.}
}}

\examples{
 OÖK <- pdmpBorder(descr = "3Gebiete, Übergangsraten sind nicht zeitkonstant",
                  parms = list(β = 1, a_11 = -1, a_21 = -1.5, a_31 = -1.2, a_22 = 2, a_12 = 2.5, a_32 = 3, a_23= -2.5, a_13 = -3, a_33 = -2, 
                                s_12 = 1, s_21 = 2, s_31 = 1, s_13 = 2, s_23 = 3, s_32 = 4, 
                                κ112 = 5, κ113 = 3, κ131 = 3, κ132 = 0, κ121 = 0, κ123 = 1, κ212 = 5, κ213 = 3, κ231 = 3, κ232 = 0, κ221 = 0, 
                                κ223 = 1 , κ312 = 4.5, κ313 = 3, κ331 = 3, κ332 = 0, κ321 = 0, κ323 = 1),
                  init = c(ξ = 6, θ = c(1, 2)),
                  borroot = function(t, x, parms){return(c(x[1]-2))}, 
                  terroot = function(t, x, parms){return(c(x[1]))},
                  discStates = list(area = (c(1, 2, 3)), modi = c(1, 2, 3)),
                  dynfunc = function(t, x, parms) {
                    dξ <- with(as.list(c(x, parms)),switch(θ1, switch(θ2, a_11*ξ - β, a_12 - β*ξ, a_13*ξ - β), 
                                                            switch(θ2, a_21*ξ - β, a_22 - β*ξ, a_23*ξ - β), 
                                                            switch(θ2, a_31*ξ - β, a_32 - β*ξ, a_33*ξ - β))) 
                    return(c(dξ, 0, 0))
                  },
                  ratefunc = function(t, x, parms) {
                    return(with(as.list(c(x, parms)), c(switch(θ1, switch(θ2, c(κ112, κ113, s_12*ξ, s_13*ξ), c(κ123, κ121, 0, 0), c(κ131, κ132, 0, 0)),
                                                                  switch(θ2, c(κ212, κ213, s_23*ξ, s_21*ξ), c(κ223, κ221, 0, 0), c(κ231, κ232, 0, 0)),
                                                                  switch(θ2, c(κ312, κ313, s_31*ξ, s_32*ξ), c(κ323, κ321, 0, 0), c(κ331, κ332, 0, 0))))))
                  },
                  jumpfunc = function(t, x, parms, jtype) {
                    return(with(as.list(c(x,parms)), c(x[1], switch(jtype, switch(x[2], 1, 2, 3), switch(x[2], 1, 2, 3), 
                                                                    switch(x[2], 2 ,3 ,1), switch(x[2], 3, 2, 1)),
                      switch(jtype, switch(x[3], 2, 3, 1), switch(x[3], 3, 1, 2), switch(x[3], 1, 2, 3), switch(x[3], 1, 2, 3)))))
                  },  
                  
                  borderfunc = function(t, x, parms){ return(with(as.list(c(x,parms)), c(x[1:2], 1)))
                  },
                  times = c(from = 0, to = 100, by = 0.1))

# load it and plot a simulation:
data("OÖK")
plot(sim(OÖK))
}
\seealso{
\code{\link{IBBall}} for an easier example of a \code{pdmpBorder}.
}
\keyword{datasets}
